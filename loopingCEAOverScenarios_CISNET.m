% DESCRIPTION: Looping vaxCEA_multSims_SACEA.m over all the scenario
% numbers, cleaning the output, turning into an array, and exporting to CSV for 
% processing in R. 

function loopingCEAOverScenarios_CISNET(username)

clear;

% Initialize variables
[stepsPerYear , timeStep , startYear , currYear , endYear , ...
    years , disease , viral , hpvVaxStates , hpvNonVaxStates , endpoints , ...
    intervens , gender , age , risk , hpvTypeGroups , dim , k , toInd , ...
    annlz , ...
    ageSexDebut , mInit , fInit , partnersM , partnersF , maleActs , ...
    femaleActs , riskDist , fertility , fertility2 , fertility3 , fertility4 , ...
    mue , mue2 , mue3 , mue4 , epsA_vec , epsR_vec , ...
    yr , ...
    hivOn , betaHIV_mod , muHIV , kCD4 , ...
    hpvOn , beta_hpvVax_mod , beta_hpvNonVax_mod , fImm , rImmune , ...
    kCin1_Inf , kCin2_Cin1 , kCin3_Cin2 , kCC_Cin3 , rNormal_Inf , kInf_Cin1 , ...
    kCin1_Cin2 , kCin2_Cin3 , lambdaMultImm , hpv_hivClear , rImmuneHiv , ...
    c3c2Mults , c2c1Mults , c2c3Mults , c1c2Mults , muCC , muCC_ud , muCC_d , kRL , kDR , artHpvMult , ...
    hpv_hivMult , maleHpvClearMult , ...
    condUse , screenYrs , hpvScreenStartYear , ...
    artYr , maxRateM , maxRateF , ...
    artYr_vec , artM_vec , artF_vec , minLim , maxLim , ...
    circ_aVec , vmmcYr_vec , vmmc_vec , vmmcYr , vmmcRate , ...
    hivStartYear , circStartYear , circNatStartYear , vaxStartYear , ...
    baseline , who , spCyto , spHpvDna , spGentyp , spAve , spHpvAve , ...
    circProtect , condProtect , MTCTRate , hyst , ...
    OMEGA , ...
    ccInc2012_dObs , ccInc2018_dObs , cc_dist_dObs , cin3_dist_dObs , ...
    cin1_dist_dObs , hpv_dist_dObs , cinPos2002_dObs , cinNeg2002_dObs , ...
    cinPos2015_dObs , cinNeg2015_dObs , hpv_hiv_dObs , hpv_hivNeg_dObs , ...
    hpv_hivM2008_dObs , hpv_hivMNeg2008_dObs , hivPrevM_dObs , hivPrevF_dObs , ...
    popAgeDist_dObs , totPopSize_dObs , ...
    stageDist_1997_dObs , ...
    hivCurr , ...
    gar , hivSus , hpvVaxSus , hpvVaxImm , hpvNonVaxSus , hpvNonVaxImm , ...
    toHiv , vaxInds , nonVInds , hpvVaxInf , hpvNonVaxInf , ...
    hivInds , ...
    cin3hpvVaxIndsFrom , ccLochpvVaxIndsTo , ccLochpvVaxIndsFrom , ...
    ccReghpvVaxInds , ccDisthpvVaxInds , cin3hpvNonVaxIndsFrom , ...
    ccLochpvNonVaxIndsTo , ccLochpvNonVaxIndsFrom , ccReghpvNonVaxInds , ...
    ccDisthpvNonVaxInds , cin1hpvVaxInds , cin2hpvVaxInds , cin3hpvVaxInds , ...
    cin1hpvNonVaxInds , cin2hpvNonVaxInds , cin3hpvNonVaxInds , normalhpvVaxInds , ...
    immunehpvVaxInds , infhpvVaxInds , normalhpvNonVaxInds , immunehpvNonVaxInds , ...
    infhpvNonVaxInds , fromVaxNoScrnInds , fromVaxScrnInds , toNonVaxNoScrnInds , ...
    toNonVaxScrnInds , ageInd , riskInd , ...
    kSymp , hystMult , ...
    hivNegNonVMMCinds , hivNegVMMCinds , ...
    vlAdvancer , ...
    fertMat , hivFertPosBirth , hivFertNegBirth , fertMat2 , ...
    hivFertPosBirth2 , hivFertNegBirth2 , fertMat3 , hivFertPosBirth3 , hivFertNegBirth3 , ...
    fertMat4 , hivFertPosBirth4 , hivFertNegBirth4 , ...
    dFertPos1 , dFertNeg1 , dFertMat1 , dFertPos2 , dFertNeg2 , dFertMat2 , ...
    dFertPos3 , dFertNeg3 , dFertMat3 , deathMat , deathMat2 , deathMat3 , deathMat4 , ...
    dDeathMat , dDeathMat2 , dDeathMat3 , dMue , ...
    ccLochpvVaxIndsFrom_treat , ...
    ccReghpvVaxInds_treat , ccDisthpvVaxInds_treat , vaxEff] = loadUp2_CISNET_S0(1 , 0 , [] , [] , [] , 1 , 1); % ***SET ME***

% Indices of calib runs to plot
% Temporarily commenting out to only run one scenario first to test out
% code
% fileInds = {'6_1' , '6_2' , '6_3' , '6_6' , '6_8' , '6_9' , '6_11' , ...
%      '6_12' , '6_13' , '6_15' , '6_20' , '6_21' , '6_22' , '6_26' , ...
%     '6_27' , '6_32' , '6_34' , '6_35' , '6_38' , '6_39' , '6_40' , ...
%     '6_41' , '6_42' , '6_45' , '6_47'};    % 22Apr20Ph2V11 ***************SET ME****************
fileInds = {'6_1'}; % FORTESTING
nRuns = length(fileInds);

lastYear = 2125; % manually set in futureSim 
monthlyTimespan = [startYear : timeStep : lastYear]; % list all the timespans in a vector
monthlyTimespan = monthlyTimespan(1 : end-1); % remove the very last date
monthlyTimespanFut = [endYear : timeStep : lastYear]; % screening time span starts at 2021
monthlyTimespanFut = monthlyTimespanFut(1 : end-1); 
nTimepoints = length(monthlyTimespan);
nTimepointsFut = length(monthlyTimespanFut); 

% parallelizing the for loop
% loopSegments = {0 , round(3/2) , 3}; % ********SET ME*********: how many scenarios are you running
% loopSegmentsLength = length(loopSegments);

scenarios = {'0'}; % *********SET ME***********: what are the scenarios you are running

% for k = 1 : loopSegmentsLength-1 
%     parfor j = loopSegments{k}+1 : loopSegments{k+1}
    
for j = [1] % FORTESTING

    sceNum = j - 1; 
    sceString = scenarios{j}; % turn sceNum into string sceString
    sce = sceNum + 1; % add one since indices start at 1 (so scenarios will be 1-10 in this case) 

    % Initialize result matrices 
    hpvHealthState = zeros(nTimepoints, age, 3, nRuns); % i'm grouping hiv disease state into hiv neg, hiv pos, and hiv pos on art 
    hivHealthState = zeros(nTimepoints, age, 3, nRuns); 
    newCC = zeros(nTimepoints, age, 3, nRuns); 
    totalPerAge = zeros(nTimepoints, age, 3, nRuns); 
    totalPerAgeNoCC = zeros(nTimepoints, age, 3, nRuns); 
    onART = zeros(nTimepoints, age, 3, nRuns); 

    % Feeding in the zeroed result matrix, spitting out the same matrix but with all the counts added in for that scenario
    [hpvHealthState, hivHealthState, newCC, totalPerAge, totalPerAgeNoCC, onART] = ...
        vaxCEA_multSims_CISNET(1 , sceString , {'0'}, fileInds, hpvHealthState, hivHealthState, newCC, totalPerAge, totalPerAgeNoCC, onART);  

% turn all the result matrices into 2D 
    for param = 1 : nRuns
        for a = 1 : age
            for dInd = 1 : 3 
                if (param == 1 && a == 1 && dInd == 1) 
                    hpvHealthStateReshape = [transpose(monthlyTimespan), a.*ones(nTimepoints,1), dInd.*ones(nTimepoints,1), ...
                                             param.*ones(nTimepoints,1), sce.*ones(nTimepoints,1), hpvHealthState(:, a, dInd, param)];
                    hivHealthStateReshape = [transpose(monthlyTimespan), a.*ones(nTimepoints,1), dInd.*ones(nTimepoints,1), ...
                                             param.*ones(nTimepoints,1), sce.*ones(nTimepoints,1), hivHealthState(:, a, dInd, param)];
                    newCCReshape = [transpose(monthlyTimespan), a.*ones(nTimepoints,1), dInd.*ones(nTimepoints,1), ...
                                             param.*ones(nTimepoints,1), sce.*ones(nTimepoints,1), newCC(:, a, dInd, param)];
                    totalPerAgeReshape = [transpose(monthlyTimespan), a.*ones(nTimepoints,1), dInd.*ones(nTimepoints,1), ...
                                             param.*ones(nTimepoints,1), sce.*ones(nTimepoints,1), totalPerAge(:, a, dInd, param)];
                    totalPerAgeNoCCReshape = [transpose(monthlyTimespan), a.*ones(nTimepoints,1), dInd.*ones(nTimepoints,1), ...
                                             param.*ones(nTimepoints,1), sce.*ones(nTimepoints,1), totalPerAgeNoCC(:, a, dInd, param)];
                    onARTReshape = [transpose(monthlyTimespan), a.*ones(nTimepoints,1), dInd.*ones(nTimepoints,1), ...
                                             param.*ones(nTimepoints,1), sce.*ones(nTimepoints,1), onART(:, a, dInd, param)];
                else 
                    hpvHealthStateReshape = [hpvHealthStateReshape; 
                                            transpose(monthlyTimespan), a.*ones(nTimepoints,1), dInd.*ones(nTimepoints,1), ...
                                             param.*ones(nTimepoints,1), sce.*ones(nTimepoints,1), hpvHealthState(:, a, dInd, param)];
                    hivHealthStateReshape = [hivHealthStateReshape; 
                                            transpose(monthlyTimespan), a.*ones(nTimepoints,1), dInd.*ones(nTimepoints,1), ...
                                             param.*ones(nTimepoints,1), sce.*ones(nTimepoints,1), hivHealthState(:, a, dInd, param)];
                    newCCReshape = [newCCReshape; 
                                            transpose(monthlyTimespan), a.*ones(nTimepoints,1), dInd.*ones(nTimepoints,1), ...
                                             param.*ones(nTimepoints,1), sce.*ones(nTimepoints,1), newCC(:, a, dInd, param)];
                    totalPerAgeReshape = [totalPerAgeReshape; 
                                            transpose(monthlyTimespan), a.*ones(nTimepoints,1), dInd.*ones(nTimepoints,1), ...
                                             param.*ones(nTimepoints,1), sce.*ones(nTimepoints,1), totalPerAge(:, a, dInd, param)];
                    totalPerAgeNoCCReshape = [totalPerAgeNoCCReshape; 
                                            transpose(monthlyTimespan), a.*ones(nTimepoints,1), dInd.*ones(nTimepoints,1), ...
                                             param.*ones(nTimepoints,1), sce.*ones(nTimepoints,1), totalPerAgeNoCC(:, a, dInd, param)];
                    onARTReshape = [onARTReshape; 
                                            transpose(monthlyTimespan), a.*ones(nTimepoints,1), dInd.*ones(nTimepoints,1), ...
                                             param.*ones(nTimepoints,1), sce.*ones(nTimepoints,1), onART(:, a, dInd, param)];
                end 
            end 
        end 
        disp(['Complete Scenario ', num2str(sce), ', Parameter ', num2str(param)])
    end

% turn into arrays
hpvHealthStateReshape1 = array2table(hpvHealthStateReshape, 'VariableNames', {'year', 'age', 'disease', 'paramNum', ...
        'sceNum', 'count'}); 
hivHealthStateReshape1 = array2table(hivHealthStateReshape, 'VariableNames', {'year', 'age', 'disease', 'paramNum', ...
        'sceNum', 'count'}); 
newCCReshape1 = array2table(newCCReshape, 'VariableNames', {'year', 'age', 'disease', 'paramNum', ...
        'sceNum', 'count'}); 
totalPerAgeReshape1 = array2table(totalPerAgeReshape, 'VariableNames', {'year', 'age', 'disease', 'paramNum', ...
        'sceNum', 'count'}); 
totalPerAgeNoCCReshape1 = array2table(totalPerAgeNoCCReshape, 'VariableNames', {'year', 'age', 'disease', 'paramNum', ...
        'sceNum', 'count'}); 
onARTReshape1 = array2table(onARTReshape, 'VariableNames', {'year', 'age', 'disease', 'paramNum', ...
        'sceNum', 'count'}); 

% spit out into CSV 
writetable(hpvHealthStateReshape1,[pwd '/SACEA/hpvHealthState_S' sceString '.csv']);
writetable(hivHealthStateReshape1,[pwd '/SACEA/hivHealthState_S' sceString '.csv']);
writetable(newCCReshape1,[pwd '/SACEA/newCC_S' sceString '.csv']);
writetable(totalPerAgeReshape1,[pwd '/SACEA/totalPerAge_S' sceString '.csv']);
writetable(totalPerAgeNoCCReshape1,[pwd '/SACEA/totalPerAgeNoCC_S' sceString '.csv']);
writetable(onARTReshape1,[pwd '/SACEA/onART_S' sceString '.csv']);

    end
% end
end